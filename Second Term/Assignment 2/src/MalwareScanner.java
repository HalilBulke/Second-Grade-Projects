import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Map;
import java.util.Scanner;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        System.out.println("Started scanning...");
        Util.printlnDash();
        // TODO: YOUR CODE HERE
        File myObj = new File(filename);
        Scanner myReader = new Scanner(myObj);
        FileWriter myWriter = new FileWriter("scanLog.txt");
        int counter = 0;
        int lineNumber=0;
        while(myReader.hasNextLine()) {
            String hash=turbo64(myReader.nextLine());
            lineNumber+=1;
            if(malwareDB.containsKey(hash)){
                counter+=1;
                System.out.println("Detected malware!");
                System.out.println(malwareDB.get(hash).toString());
                Util.printlnDash();

                myWriter.write(hash+"@"+lineNumber+"\n");

            }
        }
        System.out.println("Scan complete! "+ counter +" threats are found and eliminated. Generating log file...");
        myReader.close();     //closes the scanner
        myWriter.close();
    }


    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
        long MOD_TURBO = 4294967291L;
        long a = 0;
        long b = 1;
        for(int c=0 ;c<in.length();c++) {
            a = (a +(int) in.charAt(c)) % MOD_TURBO;
            b = (a + b) % MOD_TURBO;
        }
        return Long.toHexString( ((b << 32) | a));

    }
}
